name: Repo Sync

on:
  schedule: 
    - cron: "0 */6 * * *" # Her 6 saatte bir çalışır
  workflow_dispatch: # Manuel çalıştırmak için

jobs:
  repo-sync:
    name: Repo Sync
    runs-on: ubuntu-latest

    steps:
      # 1. Public Repo'yu Checkout Et
      - name: Checkout Public Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Private Repo'yu Klonla
      - name: Clone Private Repo
        run: |
          git clone https://x-access-token:${{ secrets.PRIVATE_REPO_TOKEN }}@github.com/${{ secrets.PRIVATE_REPO_OWNER }}/selfbot.git private-repo
        env:
          GIT_TERMINAL_PROMPT: 0
          GIT_ASKPASS: /bin/echo

      # 3. Private Repo Kodlarını Public Repo'ya Kopyala
      - name: Sync Private Repo Files
        run: |
          rsync -av --delete --ignore-missing-args private-repo/ ./ || true

      # 4. Private Repo Klasörünü Temizle
      - name: Remove Temporary Clone
        run: |
          rm -rf private-repo

      # 5. İlk Commit Kontrolü
      - name: Initialize Git if Empty
        run: |
          if [ -z "$(git rev-parse --verify HEAD 2>/dev/null)" ]; then
            echo "Repo boş, ilk commit oluşturuluyor..."
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add .
            git commit -m "Initial commit from private repo"
          fi

      # 6. Değişiklikleri Commit ve Push Et
      - name: Commit and Push Changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          # Eğer değişiklik varsa commit et
          git diff-index --quiet HEAD || git commit -m "Private repo'dan senkronizasyon"
          git push
